<div class="widget-input widget-input-rounded">
    <%= form_for [:users, channel, Message.new], format: 'js', remote: true do |f| %>
        <div class="widget-input-container">
            <div class="widget-input-box">
                <%= f.text_field :body, class: "form-control form-control-sm", style: "margin-left: 5px;", autofocus: true, placeholder: "Enter message text", autocomplete: "off" %>
            </div>

            <div class="widget-input-icon">
              <label class="text-grey mb-0 px-3 py-2 pointer-cursor" style="z-index: 1;">
                <i class="fa fa-paperclip"></i>
                <%= f.file_field :attachment, id: 'message-attachment', class: 'd-none', title: "Image upload" %>
              </label>
            </div>

            <div class="widget-input-divider"></div>

            <div class="widget-input-icon">
              <label class="text-grey mb-0 px-3 py-2 pointer-cursor" style="z-index: 1;">
                <i class="fa fa-send"></i>
                <%= f.submit "Send", class: 'd-none', title: "Send Message" %>
              </label>
            </div>
        </div>
    <% end %>

  <script type="text/javascript">
      function getCaret(el) { 
        if (el.selectionStart) { 
          return el.selectionStart; 
        } else if (document.selection) { 
          el.focus(); 

          var r = document.selection.createRange(); 
          if (r == null) { 
            return 0; 
          } 

          var re = el.createTextRange(), 
              rc = re.duplicate(); 
          re.moveToBookmark(r.getBookmark()); 
          rc.setEndPoint('EndToStart', re); 

          return rc.text.length; 
        }  
        return 0; 
      }

      $('textarea').keypress(function (event) {
        var text_class = $(event.target).attr('class');

          if (text_class == 'form-control message-body py-1 px-1') {
            
            if (event.keyCode == 13 && event.ctrlKey) {
              var content = this.value;
              var caret = getCaret(this);
              this.value = content.substring(0,caret)+"\n"+content.substring(caret,content.length);
              event.stopPropagation();
            }
            else if(event.keyCode == 13)
            {
                event.preventDefault();
                $('#new_message').submit();
            }
          }
            
          else {
            if (event.keyCode == 13) {
              var content = this.value;
              var caret = getCaret(this);
              this.value = content.substring(0,caret)+"\n"+content.substring(caret,content.length);
              event.stopPropagation();
              event.preventDefault();
            }
          }

      });

      function expandTextarea(id) {
          var $element = $('.message-body').get(0);  
          
          $element.addEventListener('keyup', function() {
              this.style.height = 0;
              this.style.height = this.scrollHeight + 'px';
          }, false);
      }

      expandTextarea('txtarea');


  </script>

    <script type="text/javascript">
    $(function() {
      var modal = document.getElementById('msg_preview');
      var imgs = document.getElementsByClassName('msg_image');
      var modalImg = document.getElementById("img01");

      [].forEach.call(imgs, function (img) {
        img.onclick = function(){
          modal.style.display = "block";
          modalImg.src = this.src;
        }
      });

      var span = document.getElementsByClassName("close_preview")[0];

      span.onclick = function() { 
          modal.style.display = "none";
      }
    })
  </script>

</div>